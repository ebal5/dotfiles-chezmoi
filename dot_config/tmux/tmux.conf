# =============================================================================
# TMUX CHEAT SHEET
# =============================================================================
#
# 基本操作:
#   C-z          - プレフィックスキー
#   C-z d        - セッションをデタッチ
#   C-z c        - 新しいウィンドウを作成
#   C-z n        - 次のウィンドウ
#   C-z p        - 前のウィンドウ
#   C-z ,        - ウィンドウ名を変更
#   C-z %        - ペインを縦分割
#   C-z "        - ペインを横分割
#   C-z o        - 次のペインに移動
#   C-z z        - ペインを最大化/復元
#   C-z x        - ペインを閉じる
#   C-z &        - ウィンドウを閉じる
#   C-z r        - 設定をリロード
#   C-z ?        - キーバインド一覧
#   C-z [        - コピーモードに入る
#   C-z ]        - クリップボードからペースト
#
# カスタムキーバインド:
#   v または |    - ペインを縦分割
#   s または -    - ペインを横分割
#   h,j,k,l      - ペイン間を移動
#   M-h,j,k,l    - プレフィックスなしでペイン間を移動
#   H,J,K,L      - ペインをリサイズ
#   M-j,k,h,l    - プレフィックスなしでペインをリサイズ
#   S-Left/Right - ウィンドウ間を移動
#   C-h/l        - ウィンドウ間を移動
#   M-m          - ペインを最大化/復元
#   y            - ペインの同期を切り替え
#   S            - 新しいセッションを作成
#   X            - セッションを終了
#   M-space      - レイアウト: even-horizontal
#   M-1          - レイアウト: even-vertical
#   M-2          - レイアウト: main-horizontal
#   M-3          - レイアウト: main-vertical
#   M-4          - レイアウト: tiled
#
# コピーモード (C-z [ で入る):
#   v            - 選択開始
#   y            - 選択をコピー
#   C-v          - 矩形選択
#   h,j,k,l      - カーソル移動
#   ?            - 上方向検索
#   /            - 下方向検索
#   n            - 次の検索結果
#   N            - 前の検索結果
#
# ウィンドウ名管理:
#   M-s          - スマート命名（推奨）
#   M-g          - Gitブランチ付き命名
#   M-t          - 時間ベース命名
#   M-p          - プロジェクト名のみ
#   M-r          - カスタムウィンドウ名プロンプト
#   M-w          - 現在のウィンドウ名を表示
#   M-n          - 🚀 絵文字付き命名
#   M-d          - 🐳 絵文字付き命名
#   M-g          - 📦 絵文字付き命名
#   M-p          - 🐍 絵文字付き命名
#   M-b          - Gitブランチ情報付き命名
#   M-0          - ウィンドウ名をリセット
#
# =============================================================================

# set prefix to C-z
set -g prefix C-z
unbind C-b
bind C-z send-prefix

set -g default-terminal "screen-256color"
set -ga terminal-overrides ",*256col*:Tc"
set -g status-keys vi
set -g history-limit 10000

setw -g mode-keys vi
setw -g monitor-activity on

# ペイン分割（現代的な設定）
bind-key v split-window -h -c "#{pane_current_path}"
bind-key s split-window -v -c "#{pane_current_path}"
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# ペインリサイズ
bind-key J resize-pane -D 5
bind-key K resize-pane -U 5
bind-key H resize-pane -L 5
bind-key L resize-pane -R 5

bind-key M-j resize-pane -D
bind-key M-k resize-pane -U
bind-key M-h resize-pane -L
bind-key M-l resize-pane -R

# より細かいペインリサイズ
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2

# Vim style pane selection
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Use Alt-vim keys without prefix key to switch panes
bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R

# Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window

# より良いウィンドウ選択
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# No delay for escape key press
set -sg escape-time 0

# Reload tmux config
bind r source-file ~/.config/tmux/tmux.conf \; display "Reloaded!"

# THEME
set -g status-bg black
set -g status-fg white
set -g window-status-current-style 'bg=white,fg=black,bold'
set -g status-interval 60
set -g status-left-length 30
set -g status-left '#[fg=green](#S) #(whoami)'
set -g status-right '#[fg=yellow]#(cut -d " " -f 1-3 /proc/loadavg)#[default] #[fg=white]%H:%M#[default]'

# ステータスバーの改善
set -g status-style bg=default
set -g window-status-format " #{I:#W} "
set -g window-status-current-format " #{I:#W} "
set -g window-status-separator ""

# ペインボーダーの色設定
set -g pane-border-style fg=colour238
set -g pane-active-border-style fg=colour39

# 現代的なコピーモード設定
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-selection-and-cancel
bind -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel 'pbcopy'

# ウィンドウ名の自動更新を無効化
set -g allow-rename on

# mouse mode
set -g mouse on

# パフォーマンス最適化
set -g focus-events on
set -g aggressive-resize on

# ウィンドウとペインのインデックスを1から開始
set -g base-index 1
setw -g pane-base-index 1

# ウィンドウの自動リネームを無効化（手動でリネーム可能）
setw -g automatic-rename off

# より良いウィンドウ管理
bind c new-window -c "#{pane_current_path}"

# ペインの同期
bind-key y set-window-option synchronize-panes\; display-message "synchronize-panes is now #{?pane_synchronized,on,off}"

# ペインの最大化/復元
bind -n M-m resize-pane -Z

# ウィンドウの移動
bind-key -n C-S-Left swap-window -t -1\; previous-window
bind-key -n C-S-Right swap-window -t +1\; next-window

# ベルとビジュアル通知の設定
set -g visual-activity on
set -g visual-bell on
set -g visual-silence on
set -g bell-action any

# セッション管理
bind S command-prompt -p "New Session:" "new-session -s '%%'"
bind X confirm-before -p "kill-session #S? (y/n)" "kill-session"

# ペインのレイアウト保存/復元
bind-key M-space select-layout even-horizontal
bind-key M-1 select-layout even-vertical
bind-key M-2 select-layout main-horizontal
bind-key M-3 select-layout main-vertical
bind-key M-4 select-layout tiled

# セッションの保存（tmux-resurrectプラグイン用）
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-save-bash-history 'on'

# =============================================================================
# ウィンドウ名管理の改善案
# =============================================================================

# ウィンドウ名の表示設定（最終的な設定）
# ウィンドウ名が設定されている場合はそれを使用、そうでなければコマンド名を使用
set -g window-status-format "#{?window_name,#{window_name:0:15},#{pane_current_command:0:15}}"
set -g window-status-current-format "#[fg=black,bg=white]#{?window_name,#{window_name:0:15},#{pane_current_command:0:15}}#[default]"

# ウィンドウ名の区切り文字
set -g window-status-separator ""

# 1. プロジェクト名ベースの自動命名
# 新しいウィンドウ作成時にプロジェクト名を自動設定
bind c new-window -c "#{pane_current_path}" \; run-shell 'tmux rename-window "$(basename $(git rev-parse --show-toplevel 2>/dev/null || echo $(pwd)))"'

# 2. 絵文字サポート付きウィンドウ名
# 特定のディレクトリやプロジェクトに応じて絵文字を付ける
bind-key M-n run-shell 'tmux rename-window "$(echo "🚀 $(basename $(pwd))")"'
bind-key M-d run-shell 'tmux rename-window "$(echo "🐳 $(basename $(pwd))")"'
bind-key M-g run-shell 'tmux rename-window "$(echo "📦 $(basename $(pwd))")"'
bind-key M-p run-shell 'tmux rename-window "$(echo "🐍 $(basename $(pwd))")"'

# 3. Gitブランチ情報付きウィンドウ名
bind-key M-b run-shell 'tmux rename-window "$(basename $(pwd)):$(git branch --show-current 2>/dev/null || echo "main")"'

# 4. 時間ベースのウィンドウ名
bind-key M-t run-shell 'tmux rename-window "$(date +"%H:%M")"'

# 5. カスタムウィンドウ名プロンプト
bind-key M-r command-prompt -p "Rename window:" "rename-window '%%'"

# 6. ウィンドウ名のリセット（プロジェクト名に戻す）
bind-key M-0 run-shell 'tmux rename-window "$(basename $(pwd))"'

# セッション名とウィンドウ名の組み合わせ表示
set -g status-left '#[fg=green](#S) #[fg=white]#(whoami) #[fg=yellow]#W#[default]'

# =============================================================================
# ウィンドウ名管理スクリプトとの連携
# =============================================================================

# ウィンドウ名管理スクリプトのパス
set -g @window_manager_script "$HOME/.scripts/tmux_window_manager.sh"

# スマートウィンドウ名管理（推奨）
bind-key M-s run-shell '#{@window_manager_script} smart'

# Gitブランチ付きウィンドウ名
bind-key M-g run-shell '#{@window_manager_script} git'

# 時間ベースウィンドウ名
bind-key M-t run-shell '#{@window_manager_script} time'

# プロジェクト名のみ
bind-key M-p run-shell '#{@window_manager_script} project'

# カスタムウィンドウ名プロンプト
bind-key M-r command-prompt -p "Rename window:" "run-shell '#{@window_manager_script} custom \"%%\"'"

# 現在のウィンドウ名を表示
bind-key M-w run-shell '#{@window_manager_script} show'

# 新しいウィンドウ作成時に自動的にスマート命名
bind c new-window -c "#{pane_current_path}" \; run-shell '#{@window_manager_script} smart'

# より良いウィンドウ管理
bind c new-window -c "#{pane_current_path}"
